package org.PracticaEsfe.Dominio;

/**
 * Represents a user entity in the domain layer.
 * This class holds the attributes of a user, such as ID, name, email, and password.
 */
public class Usuario {
    private int id;
    private String nombre; // Renamed to 'nombre' for consistency with UserDAOTest
    private String email;  // Renamed to 'email' for consistency with UserDAOTest
    private String contraseña; // 'contraseña' means password in Spanish, consistent with UserDAOTest

    /**
     * Default constructor for creating a new Usuario object without initial values.
     * Useful for frameworks or when populating fields after object creation.
     */
    public Usuario() {
        // Default constructor
    }

    /**
     * Parameterized constructor for creating a new Usuario object with initial values.
     * @param id The unique identifier for the user. Set to 0 for new users
     * where the ID is auto-generated by the database.
     * @param nombre The name of the user.
     * @param email The email address of the user (should be unique).
     * @param contraseña The password for the user's account.
     */
    public Usuario(int id, String nombre, String email, String contraseña) {
        this.id = id;
        this.nombre = nombre;
        this.email = email;
        this.contraseña = contraseña;
    }

    // --- Getters ---

    public int getId() {
        return id;
    }

    public String getNombre() {
        return nombre;
    }

    public String getEmail() {
        return email;
    }

    public String getContraseña() {
        return contraseña;
    }

    // --- Setters ---
    public void setId(int id) {
        this.id = id;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public void setContraseña(String contraseña) {
        this.contraseña = contraseña;
    }

    /**
     * Provides a string representation of the Usuario object for debugging.
     * @return A string containing the user's ID, name, email, and password.
     */
    @Override
    public String toString() {
        return "Usuario{" +
                "id=" + id +
                ", nombre='" + nombre + '\'' +
                ", email='" + email + '\'' +
                ", contraseña='" + contraseña + '\'' + // Be cautious with logging passwords in real applications
                '}';
    }
}